[{"D:\\ReactJs\\clone-netflix\\src\\index.js":"1","D:\\ReactJs\\clone-netflix\\src\\components\\Jumbotron\\index.js":"2","D:\\ReactJs\\clone-netflix\\src\\components\\Jumbotron\\styles\\jumbotron.js":"3","D:\\ReactJs\\clone-netflix\\src\\global-styles.js":"4","D:\\ReactJs\\clone-netflix\\src\\App.js":"5","D:\\ReactJs\\clone-netflix\\src\\containers\\Jumbotron.js":"6","D:\\ReactJs\\clone-netflix\\src\\components\\index.js":"7","D:\\ReactJs\\clone-netflix\\src\\components\\Footer\\index.js":"8","D:\\ReactJs\\clone-netflix\\src\\components\\Footer\\styles\\footer.js":"9","D:\\ReactJs\\clone-netflix\\src\\containers\\Footer.js":"10","D:\\ReactJs\\clone-netflix\\src\\components\\Accordion\\styles\\accordion.js":"11","D:\\ReactJs\\clone-netflix\\src\\components\\Accordion\\index.js":"12","D:\\ReactJs\\clone-netflix\\src\\containers\\FAQs.js":"13","D:\\ReactJs\\clone-netflix\\src\\components\\Opt-form\\index.js":"14","D:\\ReactJs\\clone-netflix\\src\\components\\Opt-form\\styles\\opt-form.js":"15"},{"size":258,"mtime":1606355606181,"results":"16","hashOfConfig":"17"},{"size":1142,"mtime":1606448268381,"results":"18","hashOfConfig":"17"},{"size":1228,"mtime":1606356776056,"results":"19","hashOfConfig":"17"},{"size":548,"mtime":1606358806133,"results":"20","hashOfConfig":"17"},{"size":361,"mtime":1606895035128,"results":"21","hashOfConfig":"17"},{"size":751,"mtime":1606447382221,"results":"22","hashOfConfig":"17"},{"size":203,"mtime":1606893782965,"results":"23","hashOfConfig":"17"},{"size":991,"mtime":1606448612860,"results":"24","hashOfConfig":"17"},{"size":1071,"mtime":1606812176187,"results":"25","hashOfConfig":"17"},{"size":1682,"mtime":1606812789154,"results":"26","hashOfConfig":"17"},{"size":1645,"mtime":1606896695315,"results":"27","hashOfConfig":"17"},{"size":1613,"mtime":1606892906287,"results":"28","hashOfConfig":"17"},{"size":864,"mtime":1606894245690,"results":"29","hashOfConfig":"17"},{"size":690,"mtime":1606895030328,"results":"30","hashOfConfig":"17"},{"size":1405,"mtime":1606897151583,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cdphue",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactJs\\clone-netflix\\src\\index.js",[],["67","68"],"D:\\ReactJs\\clone-netflix\\src\\components\\Jumbotron\\index.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Jumbotron\\styles\\jumbotron.js",[],["69","70"],"D:\\ReactJs\\clone-netflix\\src\\global-styles.js",[],["71","72"],"D:\\ReactJs\\clone-netflix\\src\\App.js",[],"D:\\ReactJs\\clone-netflix\\src\\containers\\Jumbotron.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\index.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Footer\\index.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Footer\\styles\\footer.js",[],"D:\\ReactJs\\clone-netflix\\src\\containers\\Footer.js",[],["73","74"],"D:\\ReactJs\\clone-netflix\\src\\components\\Accordion\\styles\\accordion.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Accordion\\index.js",["75","76"],"import React, { createContext, useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Inner,\r\n  Title,\r\n  Frame,\r\n  Item,\r\n  Header,\r\n  Body,\r\n} from \"./styles/accordion\";\r\n\r\nconst ToggleContext = createContext();\r\nexport default function Accordion({ children, ...restProps }) {\r\n  return (\r\n    <Container {...restProps}>\r\n      <Inner>{children}</Inner>\r\n    </Container>\r\n  );\r\n}\r\n\r\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\r\n  return <Title {...restProps}>{children}</Title>;\r\n};\r\n\r\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\r\n  return <Frame {...restProps}>{children}</Frame>;\r\n};\r\n\r\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\r\n  const [toggleShow, setToggleShow] = useState(false);\r\n  return (\r\n    <ToggleContext.Provider\r\n      value={{ toggleShow, setToggleShow}}\r\n    >\r\n      <Item {...restProps}>{children}</Item>\r\n    </ToggleContext.Provider>\r\n  );\r\n};\r\n\r\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\r\n  const { toggleShow, setToggleShow } = useContext(\r\n    ToggleContext\r\n  );\r\n\r\n  return (\r\n    <Header onClick={() => setToggleShow(!toggleShow)} {...restProps}>\r\n      {children}\r\n      {toggleShow ? (\r\n        <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\r\n      ) : (\r\n        <img src=\"/images/icons/add.png\" alt=\"Open\" />\r\n      )}\r\n    </Header>\r\n  );\r\n};\r\n\r\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\r\n  const { toggleShow } = useContext(ToggleContext);\r\n  return toggleShow ? <Body {...restProps}>{children}</Body> : null;\r\n};\r\n","D:\\ReactJs\\clone-netflix\\src\\containers\\FAQs.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Opt-form\\index.js",[],"D:\\ReactJs\\clone-netflix\\src\\components\\Opt-form\\styles\\opt-form.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","replacedBy":"86"},{"ruleId":"87","severity":2,"message":"88","line":33,"column":43,"nodeType":"89","messageId":"90","endLine":33,"endColumn":52},{"ruleId":"87","severity":2,"message":"91","line":33,"column":54,"nodeType":"89","messageId":"90","endLine":33,"endColumn":66},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],["92"],["93"],["92"],["93"],"no-undef","'activeTab' is not defined.","Identifier","undef","'setActiveTab' is not defined.","no-global-assign","no-unsafe-negation"]